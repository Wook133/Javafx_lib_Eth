package sample;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class P3AbsoluteBasic_sol_lifeInformation extends Contract {
    private static final String BINARY = "60806040526000805460a060020a61ffff0219600160a060020a031990911633171690556002805461ffff191690556112c68061003d6000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301a2175781146100be5780634a5ddb6a146101845780635f3b1f3b146101bc578063610be654146101df5780637cab5e8c146101f45780637de4626514610215578063a80d766a14610231578063b02ec52f1461024d578063ba5ccc63146102b4578063cb44211e14610345578063d6aa91d114610366578063dc5cb28314610392575b600080fd5b3480156100ca57600080fd5b506100da61ffff600435166103a7565b6040518084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561019057600080fd5b506101a061ffff60043516610633565b60408051600160a060020a039092168252519081900360200190f35b3480156101c857600080fd5b506101dd600160a060020a0360043516610729565b005b3480156101eb57600080fd5b506101dd6107b2565b34801561020057600080fd5b506101dd600160a060020a03600435166107d7565b34801561022157600080fd5b506101a061ffff6004351661080f565b34801561023d57600080fd5b506101a061ffff60043516610883565b34801561025957600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526101dd958335600160a060020a03169536956044949193909101919081908401838280828437509497506109469650505050505050565b3480156102c057600080fd5b506102d061ffff60043516610ad2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561030a5781810151838201526020016102f2565b50505050905090810190601f1680156103375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035157600080fd5b506101dd600160a060020a0360043516610c27565b34801561037257600080fd5b5061037b610c65565b6040805161ffff9092168252519081900360200190f35b34801561039e57600080fd5b5061037b610c6f565b60008054819060609061ffff8086169160a060020a900416811115610404576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061127b833981519152604482015290519081900360640190fd5b61ffff851660009081526004602081815260408084205481517f5f8988b50000000000000000000000000000000000000000000000000000000081529151600160a060020a0390911694635f8988b59483810194938390030190829087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b505050506040513d602081101561049957600080fd5b505161ffff861660009081526004602081815260408084205481517f893d20e80000000000000000000000000000000000000000000000000000000081529151600160a060020a039091169463893d20e89483810194938390030190829087803b15801561050657600080fd5b505af115801561051a573d6000803e3d6000fd5b505050506040513d602081101561053057600080fd5b505161ffff871660009081526004602081905260408083205481517f5a9b0b890000000000000000000000000000000000000000000000000000000081529151600160a060020a0390911693635a9b0b89938381019391929182900301818387803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156105db57600080fd5b8101908080516401000000008111156105f357600080fd5b8201602081018481111561060657600080fd5b815164010000000081118282018710171561062057600080fd5b50959b949a509850929650505050505050565b6000805461ffff8084169160a060020a90041681111561068b576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061127b833981519152604482015290519081900360640190fd5b61ffff831660009081526004602081815260408084205481517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529151600160a060020a0390911694638da5cb5b9483810194938390030190829087803b1580156106f657600080fd5b505af115801561070a573d6000803e3d6000fd5b505050506040513d602081101561072057600080fd5b50519392505050565b600054600160a060020a0316331461074057600080fd5b6002805461ffff9081166000908152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03979097169687179055845461ffff198116908516600190810190951617909455938152928190529120805460ff19169091179055565b600054600160a060020a031633146107c957600080fd5b600054600160a060020a0316ff5b600054600160a060020a031633146107ee57600080fd5b600160a060020a03166000908152600160205260409020805460ff19169055565b60025460009061ffff8084169116811115610862576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061127b833981519152604482015290519081900360640190fd5b505061ffff16600090815260036020526040902054600160a060020a031690565b6000805461ffff8084169160a060020a9004168111156108db576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061127b833981519152604482015290519081900360640190fd5b61ffff831660009081526004602081815260408084205481517fdfbf306d0000000000000000000000000000000000000000000000000000000081529151600160a060020a039091169463dfbf306d9483810194938390030190829087803b1580156106f657600080fd5b3360008181526001602081905260409091205460ff161515146109b3576040805160e560020a62461bcd02815260206004820152600c60248201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604482015290519081900360640190fd5b82826109bd610c80565b600160a060020a0383168152604060208083018281528451928401929092528351606084019185019080838360005b83811015610a045781810151838201526020016109ec565b50505050905090810190601f168015610a315780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f080158015610a53573d6000803e3d6000fd5b506000805460a060020a9081900461ffff9081168352600460205260408320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039590951694909417909355815475ffff000000000000000000000000000000000000000019811690829004841660010190931602919091179055505050565b60005460609061ffff8084169160a060020a900416811115610b2c576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061127b833981519152604482015290519081900360640190fd5b61ffff831660009081526004602081905260408083205481517ff47b77400000000000000000000000000000000000000000000000000000000081529151600160a060020a039091169363f47b7740938381019391929182900301818387803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610bd557600080fd5b810190808051640100000000811115610bed57600080fd5b82016020810184811115610c0057600080fd5b8151640100000000811182820187101715610c1a57600080fd5b5090979650505050505050565b600054600160a060020a03163314610c3e57600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b60025461ffff1690565b60005460a060020a900461ffff1690565b6040516105ea80610c9183390190560060806040526040516105ea3803806105ea83398101604052805160208083015160008054600160a060020a038516600160a060020a03199182161790915560018054909116331790559092018051919290916100619160029190840190610069565b505050610104565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100aa57805160ff19168380011785556100d7565b828001600101855582156100d7579182015b828111156100d75782518255916020019190600101906100bc565b506100e39291506100e7565b5090565b61010191905b808211156100e357600081556001016100ed565b90565b6104d7806101136000396000f30060806040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635a9b0b8981146100925780635f8988b51461011c578063610be6541461014d578063893d20e8146101645780638da5cb5b14610179578063c0da1e681461018e578063dfbf306d1461024d578063f47b774014610262575b600080fd5b34801561009e57600080fd5b506100a7610277565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012857600080fd5b5061013161030a565b60408051600160a060020a039092168252519081900360200190f35b34801561015957600080fd5b50610162610319565b005b34801561017057600080fd5b5061013161033c565b34801561018557600080fd5b5061013161034b565b34801561019a57600080fd5b506101a361035a565b6040518084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561025957600080fd5b50610131610411565b34801561026e57600080fd5b506100a7610420565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b600054600160a060020a031690565b600154600160a060020a031633141561033a57600154600160a060020a0316ff5b565b600154600160a060020a031690565b600154600160a060020a031681565b600080546001805460028054604080516020601f6000199785161561010002979097019093168490049586018390048302810183019091528481528695606095600160a060020a039182169590911693928391908301828280156103ff5780601f106103d4576101008083540402835291602001916103ff565b820191906000526020600020905b8154815290600101906020018083116103e257829003601f168201915b50505050509050925092509250909192565b600054600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b5050505050815600a165627a7a72305820114db487c5afe11e3bfe13bd5b6ed96d6b9cc4dd058353ce1d2b052f46c4595800294f7574206f6620496e6465780000000000000000000000000000000000000000a165627a7a723058202a6cf41f19612c9ef021a9ea9aa0d13488c0e063d53c34d6522cc907020e84a70029";

    public static final String FUNC_GETPOS = "getPos";

    public static final String FUNC_GETPUBLISHERPOS = "getPublisherPos";

    public static final String FUNC_ADDOWNERS = "addOwners";

    public static final String FUNC_CLOSECONTRACT = "closeContract";

    public static final String FUNC_REMOVEAPPROVAL = "removeApproval";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETCOWADDRESSPOS = "getCowAddressPos";

    public static final String FUNC_ADDINFORMATION = "addInformation";

    public static final String FUNC_GETINFORMATIONPOS = "getInformationPos";

    public static final String FUNC_ADDAPPROVAL = "addApproval";

    public static final String FUNC_GETCOUNTOWNERS = "getCountOwners";

    public static final String FUNC_GETCOUNTCOWS = "getCountCows";

    protected P3AbsoluteBasic_sol_lifeInformation(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected P3AbsoluteBasic_sol_lifeInformation(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<Tuple3<String, String, String>> getPos(BigInteger index) {
        final Function function = new Function(FUNC_GETPOS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple3<String, String, String>>(
                new Callable<Tuple3<String, String, String>>() {
                    @Override
                    public Tuple3<String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<String> getPublisherPos(BigInteger index) {
        final Function function = new Function(FUNC_GETPUBLISHERPOS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addOwners(String s) {
        final Function function = new Function(
                FUNC_ADDOWNERS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> closeContract() {
        final Function function = new Function(
                FUNC_CLOSECONTRACT, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeApproval(String s) {
        final Function function = new Function(
                FUNC_REMOVEAPPROVAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getOwner(BigInteger index) {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCowAddressPos(BigInteger index) {
        final Function function = new Function(FUNC_GETCOWADDRESSPOS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addInformation(String a, String b) {
        final Function function = new Function(
                FUNC_ADDINFORMATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(a), 
                new org.web3j.abi.datatypes.Utf8String(b)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getInformationPos(BigInteger index) {
        final Function function = new Function(FUNC_GETINFORMATIONPOS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addApproval(String s) {
        final Function function = new Function(
                FUNC_ADDAPPROVAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(s)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getCountOwners() {
        final Function function = new Function(FUNC_GETCOUNTOWNERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getCountCows() {
        final Function function = new Function(FUNC_GETCOUNTCOWS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public static RemoteCall<P3AbsoluteBasic_sol_lifeInformation> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployRemoteCall(P3AbsoluteBasic_sol_lifeInformation.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static RemoteCall<P3AbsoluteBasic_sol_lifeInformation> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployRemoteCall(P3AbsoluteBasic_sol_lifeInformation.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static P3AbsoluteBasic_sol_lifeInformation load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new P3AbsoluteBasic_sol_lifeInformation(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static P3AbsoluteBasic_sol_lifeInformation load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new P3AbsoluteBasic_sol_lifeInformation(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
